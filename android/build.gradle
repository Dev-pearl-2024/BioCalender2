// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '34.0.0'
        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '26')
        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '35')
        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '35')
        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.9.25'
        ndkVersion = "26.1.10909125"
    }
    repositories {
        google()
        mavenCentral()
        maven { url 'https://maven.pkg.jetbrains.space/public/p/kotlinx-coroutines/maven' }
        maven { url "https://jitpack.io" }
    }
    dependencies {
    classpath("androidx.compose.compiler:compiler:1.5.11")
    classpath("com.android.tools.build:gradle:8.1.3")  // Ensure Gradle version is set
    classpath("com.facebook.react:react-native-gradle-plugin:0.76.7") // Use the correct version
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.25") // Ensure latest Kotlin version
}
    // dependencies {
    //     classpath('com.android.tools.build:gradle')
    //     classpath('com.facebook.react:react-native-gradle-plugin')
    //     classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')
    // }
}

apply plugin: "com.facebook.react.rootproject"

allprojects {
    repositories {
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url(new File(['node', '--print', "require.resolve('react-native/package.json')"].execute(null, rootDir).text.trim(), '../android'))
        }
        maven {
            // Android JSC is installed from npm
            url(new File(['node', '--print', "require.resolve('jsc-android/package.json', { paths: [require.resolve('react-native/package.json')] })"].execute(null, rootDir).text.trim(), '../dist'))
        }

        google()
        mavenCentral()
        maven { url 'https://www.jitpack.io' }
    }
}
// @generated begin expo-camera-import - expo prebuild (DO NOT MODIFY) sync-f244f4f3d8bf7229102e8f992b525b8602c74770
def expoCameraMavenPath = new File(["node", "--print", "require.resolve('expo-camera/package.json')"].execute(null, rootDir).text.trim(), "../android/maven")
allprojects { repositories { maven { url(expoCameraMavenPath) } } }
// @generated end expo-camera-import